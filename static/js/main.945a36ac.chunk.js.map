{"version":3,"sources":["components/Item.js","components/Home.js","pages/PokemonDetails.js","App.js","index.js"],"names":["Item","name","type","id","img_url","base","String","padStart","Card","item","md","elevation","CardActions","to","style","marginTop","position","Fab","color","component","height","src","alt","CardContent","Typography","gutterBottom","variant","Home","useState","search","setSearch","grass","setGrass","poison","setPoison","fire","setFire","flying","setFlying","water","setWater","electric","setElectric","bug","setBug","filterSearch","query","english","toLowerCase","includes","filterGrass","p","filterPoison","filterFire","filterFlying","filterWater","filterElectric","filterBug","className","Grid","container","spacing","sm","pokedex","filter","length","TextField","fullWidth","focused","placeholder","onChange","event","target","value","console","log","FormControlLabel","control","Checkbox","label","map","PokemonDetails","params","useParams","poke","Button","size","startIcon","xs","width","textAlign","HP","Attack","Defense","Speed","App","exact","path","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.945a36ac.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\n\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n\n// import pikachu from 'poke/images/025.png';\n// import pikachu_img from './../assets/poke/images/';\n\n\nfunction Item({name, type, id, base}) {\n\n\tlet img_url = 'poke/images/' + String(id).padStart(3, '0') + '.png';\n\t\n\treturn(\n\n\t<Card item md={2} elevation=\"24\">\n      <CardActions>\n        <Link to={\"/pokemon/\" + id} style={{marginTop: \"55px\", position:\"absolute\"}}>\n          <Fab color=\"secondary\" aria-label=\"add\">\n          \t<AddIcon />\n        \t</Fab>\n        </Link>\n      </CardActions>\n      <LazyLoadImage\n        component=\"img\"\n        height=\"auto\"\n        src={img_url}\n        alt={name}\n      />\n      <CardContent>\n\t    <Typography gutterBottom variant=\"h3\" component=\"div\">\n          {name}\n        </Typography>\n        \n        <Typography variant=\"h5\" component=\"div\">\n          {type[0]} | {type[1]}\n        </Typography>\n\n      </CardContent>\n    </Card>\n\t);\n}\n\nexport default Item;","import Item from './Item';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nimport Typography from '@mui/material/Typography';\n\n// import CssBaseline from '@mui/material/CssBaseline';\n// import Container from '@mui/material/Container';\n\n\nimport pokedex from './../pokedex.json' \n\nimport './Home.css';\n\nimport { useState } from 'react';\n\nfunction Home() {\n\n\tconst [search, setSearch] = useState('');\n\tconst [grass, setGrass] = useState('');\n\tconst [poison, setPoison] = useState('');\n\tconst [fire, setFire] = useState('');\n\tconst [flying, setFlying] = useState('');\n\tconst [water, setWater] = useState('');\n\tconst [electric, setElectric] = useState('');\n\tconst [bug, setBug] = useState('');\n\n\tconst updateSearch = event => {\n\t\tsetSearch(event.target.value);\n\t\tconsole.log(search);\n\t}\n\n\t//\n\t//\n\t// Count\n\tfunction count() {\n\t\treturn pokedex\n\t        \t.filter(filterSearch)\n\t        \t.filter(filterGrass)\n\t        \t.filter(filterPoison)\n\t        \t.filter(filterFire)\n\t \t\t\t.filter(filterFlying)\n\t \t\t\t.filter(filterWater)\n\t        \t.filter(filterElectric)\n\t        \t.filter(filterBug)\n\t        \t.length;\n\t}\n\n\n\t//\n\t//\n\t// Search\n\tfunction filterSearch(query) {\n\t\treturn query.name.english.toLowerCase().includes(search.toLowerCase());\n\t}\n\n\n\t//\n\t//\n\t// Grass\n\tconst updateGrass = event => {\n\t\tif(grass == 'Grass'){\n\n\t\t\tsetGrass('');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetGrass('Grass');\n\t\t}\n\t}\n\n\tfunction filterGrass(p) {\n\t\tif(grass == ''){\n\n\t\t\treturn p;\n\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\treturn p.type.includes(grass);\n\n\t\t}\n\t}\n\n\t//\n\t//\n\t// Poison\n\t\tconst updatePoison = event => {\n\t\tif(poison == 'Poison'){\n\n\t\t\tsetPoison('');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetPoison('Poison');\n\t\t}\n\t}\n\n\tfunction filterPoison(p) {\n\t\tif(poison == ''){\n\n\t\t\treturn p;\n\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\treturn p.type.includes(poison);\n\n\t\t}\n\t}\n\n\t//\n\t//\n\t// Fire\n\t\tconst updateFire = event => {\n\t\tif(fire == 'Fire'){\n\n\t\t\tsetFire('');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetFire('Fire');\n\t\t}\n\t}\n\n\tfunction filterFire(p) {\n\t\tif(fire == ''){\n\n\t\t\treturn p;\n\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\treturn p.type.includes(fire);\n\n\t\t}\n\t}\n\n\n\t//\n\t//\n\t// Flying\n\t\tconst updateFlying = event => {\n\t\tif(flying == 'Flying'){\n\n\t\t\tsetFlying('');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetFlying('Flying');\n\t\t}\n\t}\n\n\tfunction filterFlying(p) {\n\t\tif(flying == ''){\n\n\t\t\treturn p;\n\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\treturn p.type.includes(flying);\n\n\t\t}\n\t}\n\n\n\n\t//\n\t//\n\t// Water\n\t\tconst updateWater = event => {\n\t\tif(water == 'Water'){\n\n\t\t\tsetWater('');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetWater('Water');\n\t\t}\n\t}\n\n\tfunction filterWater(p) {\n\t\tif(water == ''){\n\n\t\t\treturn p;\n\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\treturn p.type.includes(water);\n\n\t\t}\n\t}\n\n\n\n\n\t//\n\t//\n\t// Electric\n\t\tconst updateElectric = event => {\n\t\tif(electric == 'Electric'){\n\n\t\t\tsetElectric('');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetElectric('Electric');\n\t\t}\n\t}\n\n\tfunction filterElectric(p) {\n\t\tif(electric == ''){\n\n\t\t\treturn p;\n\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\treturn p.type.includes(electric);\n\n\t\t}\n\t}\n\n\n\n\t//\n\t//\n\t// Bug\n\t\tconst updateBug = event => {\n\t\tif(bug == 'Bug'){\n\n\t\t\tsetBug('');\n\t\t}\n\t\telse\n\t\t{\n\t\t\tsetBug('Bug');\n\t\t}\n\t}\n\n\tfunction filterBug(p) {\n\t\tif(bug == ''){\n\n\t\t\treturn p;\n\n\t\t}\n\t\telse{\n\t\t\t\n\t\t\treturn p.type.includes(bug);\n\n\t\t}\n\t}\n  return (\n\n  \t<div className='main'>\n\n\n\t   \t<Grid container spacing={3}>\n\n\t\t  \t<Grid item sm={12}>\n\t\t  \t\t<Card elevation=\"24\" className='searchBox'>\n\n\t\t  \t\t\t<center>\n\t\t  \t\t\t<Typography gutterBottom variant=\"h3\" component=\"div\">\n\t\t\t          Pokedex\n\t\t\t        </Typography>\n\t\t        \t</center>\n\n\t\t  \t\t\t<h3>{count()} filtered</h3>\n\t\t\t    \n\t\t\t      <TextField fullWidth focused \n\t\t\t      placeholder=\"Type the name of your favourite pokemon !\" variant=\"standard\" id=\"fullWidth\"\n\t\t\t      onChange={updateSearch} />\n\n\t\t\t          <FormControlLabel className=\"label_inline\" control={<Checkbox onChange={updateGrass} />} label=\"Grass\" />\n\t\t\t\t      <FormControlLabel className=\"label_inline\" control={<Checkbox onChange={updatePoison} />} label=\"Poison\" />\n\t\t\t\t      <FormControlLabel className=\"label_inline\" control={<Checkbox onChange={updateFire} />} label=\"Fire\" />\n\t\t\t\t      <FormControlLabel className=\"label_inline\" control={<Checkbox onChange={updateWater} />} label=\"Water\" />\n\t\t\t\t      <FormControlLabel className=\"label_inline\" control={<Checkbox onChange={updateFlying} />} label=\"Flying\" />\n\t\t\t\t      <FormControlLabel className=\"label_inline\" control={<Checkbox onChange={updateElectric} />} label=\"Electric\" />\n\t\t\t\t      <FormControlLabel className=\"label_inline\" control={<Checkbox onChange={updateBug} />} label=\"Bug\" />\n\t\t\t\t  \n\t\t\t    \n\t\t\t    </Card>\n\t\t\t</Grid>\n\n\t        {pokedex\n\t        \t.filter(filterSearch)\n\t        \t.filter(filterGrass)\n\t        \t.filter(filterPoison)\n\t        \t.filter(filterFire)\n\t        \t.filter(filterFlying)\n\t        \t.filter(filterWater)\n\t        \t.filter(filterElectric)\n\t        \t.filter(filterBug)\n\t        \t\t\t.map(p => \n\t        \n\t        \t<Grid item sm={4}>\n\t        \t\t<Item name={p.name.english} \n\t        \t\ttype={p.type}\n\t        \t\tid={p.id}\n\t        \t\tbase={p.base}\n\t        \t\tkey={p.id}\n\t        \t\t/>\n\t        \t</Grid>\n\t        \n\t        )}\n    \t\n\t\t</Grid>\n\t</div>\n\n     \n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport {Link, useParams} from 'react-router-dom';\n\nimport Grid from '@mui/material/Grid';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Button from '@mui/material/Button';\nimport Fab from '@mui/material/Fab';\nimport HomeIcon from '@mui/icons-material/Home';\nimport ArrowBackIosIcon from '@mui/icons-material/ArrowBackIos';\n\nimport Typography from '@mui/material/Typography';\n\nimport pokedex from './../pokedex.json';\n\nconst PokemonDetails = () => {\n\n\tconst params = useParams();\n\tconst poke =  pokedex.filter(p => p.id == params.id);\n\n\tlet img_url = '../poke/images/' + String(params.id).padStart(3, '0') + '.png';\n\n\treturn (\n\t\t<div className='main'>\n\n\n\t\t\t<Card item md={2} elevation=\"24\" className='main'>\n\n\t\t\t<Link to='/'>\n\t\t\t\t<Button color=\"secondary\" size=\"large\" \n\t\t\t\tvariant=\"contained\" startIcon={<ArrowBackIosIcon />}>\n\t\t\t\tHome</Button>\n\t\t\t</Link>\n\t\t\t\n\t\t\t\t<CardContent>\n\n\t\t\t    <Typography gutterBottom variant=\"h3\" component=\"div\">\n\t\t          {poke[0].name.english}\n\t\t        </Typography>\n\t\t        \n\t\t        <Typography variant=\"h5\" component=\"div\">\n\t\t         {poke[0].type[0]} | {poke[0].type[1]}\n\t\t        </Typography>\n\t\t        \n\t\t        <hr />\n\n\t\t    <Grid container spacing={2}>\n\t\t        <Grid item xs={12} sm={6}>\n\n\t\t      \t\t<img src={img_url} width=\"100%\" alt={poke[0].name.english} />\n\t\t        \t\n\t\t        </Grid>\n\t\t       \t<Grid item xs={12} sm={6} \n\t\t       \tstyle={{textAlign: \"center\", marginTop: \"3em\"}}>\n\n\t\t        <Typography variant=\"h5\">\n\t\t        HP : {poke[0].base.HP}<br />\n\t\t\t\tAttack : {poke[0].base.Attack}<br />\n\t\t        Defense : {poke[0].base.Defense}<br />\n\t\t        Spl. Attack : {poke[0][\"base\"][\"Sp. Attack\"]}<br />\n\t\t        Spl. Defense : {poke[0][\"base\"][\"Sp. Defense\"]}<br />\n\t\t        Speed : {poke[0].base.Speed}\n\t\t        </Typography>\n\n\t\t        </Grid>\n\t\t    </Grid>\n\n\n\t\t      </CardContent>\n\t\t      \n\n\n\t\t    </Card>\n\t\t</div>\n\t)\n}\n\nexport default PokemonDetails","import { Route } from 'react-router-dom';\n\nimport Home from './components/Home';\nimport PokemonDetails from './pages/PokemonDetails';\n\nfunction App() {\n  return (\n    <div>\n\n      <Route exact path='/'>\n      \t<Home />\n      </Route>\n\n      <Route path='/pokemon/:id'>\n      \t<PokemonDetails />\n      </Route>\n\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<BrowserRouter><App /></BrowserRouter>);\n"],"sourceRoot":""}